@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@using ToDoListLibrary
@model ToDoAspNetMvc.ViewModels.ToDoEntryViewModel

@{
    ViewData["Title"] = "Edit";
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

<h1>Edit</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="OwnerId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <partial name="_ToDoEntryDetails" />    
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-default btn-lg" asp-action="Details" asp-controller="ToDoLists" asp-route-id="@Model.OwnerId">
        <span class="bi bi-arrow-left"></span>Back to List
    </a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(function () {
            $('.DeleteField').click(function () {
                var fieldid = $(this).attr("data-fieldid");
                $.ajax({
                    url: '@Url.Action("Delete", "Fields")' + `?id=${fieldid}`,
                    headers: { "RequestVerificationToken": "@requestToken" },
                    type: "POST",
                    cache: false,
                    async: true,
                    success: function (data) {
                        var field = document.getElementById(`Field_${fieldid}`);
                        if (field) {
                            field.style.display = "none";
                        }
                    }
                });
            });
        });
    </script>
}
